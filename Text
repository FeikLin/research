import bpy
from math import radians

# clean up
def clear_collection(collection):
    for item in collection:
        collection.remove(item, True)

def cleanup():
    clear_collection(bpy.data.cameras)
    clear_collection(bpy.data.images)
    clear_collection(bpy.data.lights)
    clear_collection(bpy.data.materials)
    clear_collection(bpy.data.meshes)
    clear_collection(bpy.data.objects)
    clear_collection(bpy.data.textures)
    
    bpy.ops.object.select_all(action= "SELECT")
    bpy.ops.object.delete(use_global=False)

# add camera, a new data camera is automaticly been created simultaneouly
cam_loc = (0, -2, 2)
rot = (radians(90), 0, 0)
bpy.ops.object.add(type = "CAMERA", location = cam_loc, rotation = rot) #set
camera = bpy.context.object
bpy.context.scene.camera = camera
camera.name = "camera_front"
bpy.data.cameras['Camera'].lens = 20 

# add light, same as above
bpy.ops.object.light_add(type='POINT', radius = 1.0, location = (0, 3, 3))
light = bpy.context.object
light.name = "light1"
bpy.data.lights["Point"].energy = 100

# create a floor, material/texture need to be add independently.
bpy.ops.mesh.primitive_plane_add(size = 8.0, location = (0, 4, 0))
plane1 = bpy.context.object
plane1.name = "floor1"

# import image
top_path = 'Users/FeikaiLin/Desktop/research/wall/'
img = bpy.data.images.load(filepath = (top_path + 'natural/145_dark_parquet' + '.jpg'))
a = "145_dark_parquet"

# add new material
mat = bpy.data.materials.new(name = a)
mat.use_nodes = True
bsdf = mat.node_tree.nodes["Principled BSDF"]
texImage = mat.node_tree.nodes.new("ShaderNodeTexImage")
texImage.image = img
mat.node_tree.links.new(bsdf.inputs['Base Color'], texImage.outputs['Color'])

# add the material to the object
if bpy.data.objects['floor1'].data.materials:
    py.data.objects['floor1'].data.materials[0] = mat
else:
    bpy.data.objects['floor1'].data.materials.append(mat)